[2024-04-28 23:18:37,706] ERROR Exception on /produto [GET] - call_trace=/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask/app.py L1449
Traceback (most recent call last):
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/clsregistry.py", line 393, in _resolve_name
    rval = d[token]
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/util/_collections.py", line 746, in __missing__
    self[key] = val = self.creator(key)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/clsregistry.py", line 372, in _access_cls
    return self.fallback[key]
KeyError: 'Comentario'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask/app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask/app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask_cors/extension.py", line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask/app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask/app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask_openapi3/scaffold.py", line 109, in wrapper
    resp = _do_wrapper(
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/flask_openapi3/do_wrapper.py", line 135, in _do_wrapper
    response = func(**request_kwargs)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/app.py", line 101, in get_produto
    produto = session.query(Produto).filter(Produto.id == produto_id).first()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 2159, in query
    return self._query_cls(entities, self, **kwargs)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 180, in __init__
    self._set_entities(entities)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 187, in _set_entities
    self._raw_columns = [
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 188, in <listcomp>
    coercions.expect(
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/sql/coercions.py", line 181, in expect
    insp._post_inspect
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 1184, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/mapper.py", line 2182, in _post_inspect
    self._check_configure()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/mapper.py", line 1924, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/mapper.py", line 3483, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/mapper.py", line 3522, in _do_configure_registries
    mapper._post_configure_properties()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/mapper.py", line 1941, in _post_configure_properties
    prop.init()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/interfaces.py", line 231, in init
    self.do_init()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/relationships.py", line 2145, in do_init
    self._process_dependent_arguments()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/relationships.py", line 2240, in _process_dependent_arguments
    self.target = self.entity.persist_selectable
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/util/langhelpers.py", line 1113, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/relationships.py", line 2107, in entity
    argument = self._clsregistry_resolve_name(self.argument)()
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/clsregistry.py", line 397, in _resolve_name
    self._raise_for_name(name, err)
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/orm/clsregistry.py", line 375, in _raise_for_name
    util.raise_(
  File "/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
    raise exception
sqlalchemy.exc.InvalidRequestError: When initializing mapper mapped class Produto->produto, expression 'Comentario' failed to locate a name ('Comentario'). If this is a class name, consider adding this relationship() to the <class 'models.produto.Produto'> class after both dependent classes have been defined.
[2024-04-28 23:18:37,989] INFO 127.0.0.1 - - [28/Apr/2024 23:18:37] "[35m[1mGET /produto HTTP/1.1[0m" 500 - - call_trace=/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/env/lib/python3.10/site-packages/werkzeug/_internal.py L224 
[2024-04-28 23:18:45,092] INFO Coletando produtos  - call_trace=/mnt/d/OneDrive/Documentos/GitHub/mvp_puc_2024/rest_api/app.py L74  
